// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plantstore.Models;

#nullable disable

namespace Plantstore.Migrations
{
    [DbContext(typeof(PlantstoreContext))]
    [Migration("20230808034614_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Plantstore.Models.LightLevel", b =>
                {
                    b.Property<string>("LightLevelId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("LightLevelId");

                    b.ToTable("LightLevels");

                    b.HasData(
                        new
                        {
                            LightLevelId = "l",
                            Name = "Low"
                        },
                        new
                        {
                            LightLevelId = "m",
                            Name = "Medium"
                        },
                        new
                        {
                            LightLevelId = "b",
                            Name = "Bright"
                        });
                });

            modelBuilder.Entity("Plantstore.Models.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantId"));

                    b.Property<string>("LightLevelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PlantId");

                    b.HasIndex("LightLevelId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            PlantId = 1,
                            LightLevelId = "b",
                            Price = 5.0,
                            Title = "Swiss Cheese"
                        });
                });

            modelBuilder.Entity("Plantstore.Models.Scientific", b =>
                {
                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<int>("ScientificNameId")
                        .HasColumnType("int");

                    b.HasKey("PlantId", "ScientificNameId");

                    b.HasIndex("ScientificNameId");

                    b.ToTable("Scientifics");

                    b.HasData(
                        new
                        {
                            PlantId = 1,
                            ScientificNameId = 1
                        });
                });

            modelBuilder.Entity("Plantstore.Models.ScientificName", b =>
                {
                    b.Property<int>("ScientificNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScientificNameId"));

                    b.Property<string>("Genus")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ScientificNameId");

                    b.ToTable("ScientificNames");

                    b.HasData(
                        new
                        {
                            ScientificNameId = 1,
                            Genus = "Monstera",
                            Species = "deliciosa"
                        });
                });

            modelBuilder.Entity("Plantstore.Models.Plant", b =>
                {
                    b.HasOne("Plantstore.Models.LightLevel", "LightLevel")
                        .WithMany("Plants")
                        .HasForeignKey("LightLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LightLevel");
                });

            modelBuilder.Entity("Plantstore.Models.Scientific", b =>
                {
                    b.HasOne("Plantstore.Models.Plant", "Plant")
                        .WithMany("Scientifics")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plantstore.Models.ScientificName", "ScientificName")
                        .WithMany("Scientifics")
                        .HasForeignKey("ScientificNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");

                    b.Navigation("ScientificName");
                });

            modelBuilder.Entity("Plantstore.Models.LightLevel", b =>
                {
                    b.Navigation("Plants");
                });

            modelBuilder.Entity("Plantstore.Models.Plant", b =>
                {
                    b.Navigation("Scientifics");
                });

            modelBuilder.Entity("Plantstore.Models.ScientificName", b =>
                {
                    b.Navigation("Scientifics");
                });
#pragma warning restore 612, 618
        }
    }
}
